{"ast":null,"code":"var _jsxFileName = \"/Users/corrinepusillo/Firebase/axolotl/client/src/components/UpdateProfile/UpdateProfile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport { Card, Form, Button, Alert } from 'react-bootstrap';\nimport { useAuth } from \"../contexts/AuthContext\";\nimport { Link, useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function UpdateProfile() {\n  _s();\n\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const passwordConfirmRef = useRef();\n  const {\n    currentUser,\n    updatePassword,\n    updateEmail\n  } = useAuth();\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const history = useHistory(); // function for handling the submit form event in our render().\n\n  function handleSubmit(e) {\n    // prevent the form fields from emptying on submit.\n    e.preventDefault(); // determine if the password value matches the password confirm value.\n\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\n      return setError(\"Passwords do not match!\");\n    }\n\n    const promises = [];\n    setLoading(true);\n    setError(\"\");\n\n    if (emailRef.current.value !== currentUser.email) {\n      promises.push(updateEmail(emailRef.current.value));\n    }\n\n    if (passwordRef.current.value) {\n      promises.push(updatePassword(passwordRef.current.value));\n    }\n\n    Promise.all(promises).then(() => {\n      history.push(\"/\");\n    }).catch(() => {\n      setError(\"Failed to update account\");\n    }).finally(() => {\n      setLoading(false);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-center mb-3\",\n          children: \"Update Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"danger\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            id: \"email\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              ref: emailRef,\n              required: true,\n              defaultValue: currentUser.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            id: \"password\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              ref: passwordRef,\n              placeholder: \"Leave blank to leave the same password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            id: \"password-confirm\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Confirm Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              ref: passwordConfirmRef,\n              placeholder: \"Leave blank to leave the same password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            disabled: loading,\n            className: \"w-100\",\n            type: \"submit\",\n            variant: \"success\",\n            children: \"Update!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-100 text-center mt-2\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/dashboard\",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(UpdateProfile, \"yPXONjDcwLsR3jqAiTVxEd3HHiE=\", false, function () {\n  return [useAuth, useHistory];\n});\n\n_c = UpdateProfile;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateProfile\");","map":{"version":3,"sources":["/Users/corrinepusillo/Firebase/axolotl/client/src/components/UpdateProfile/UpdateProfile.js"],"names":["React","useRef","useState","Card","Form","Button","Alert","useAuth","Link","useHistory","UpdateProfile","emailRef","passwordRef","passwordConfirmRef","currentUser","updatePassword","updateEmail","error","setError","loading","setLoading","history","handleSubmit","e","preventDefault","current","value","promises","email","push","Promise","all","then","catch","finally"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from 'react'\nimport { Card, Form, Button, Alert } from 'react-bootstrap'\nimport { useAuth } from \"../contexts/AuthContext\"\nimport { Link, useHistory } from 'react-router-dom'\n\nexport default function UpdateProfile(){\n    const emailRef = useRef()\n    const passwordRef = useRef()\n    const passwordConfirmRef = useRef()\n    const { currentUser, updatePassword, updateEmail } = useAuth()\n    const [error, setError] = useState(\"\");\n    const [loading, setLoading] = useState(false);\n    const history = useHistory();\n\n// function for handling the submit form event in our render().\nfunction handleSubmit(e){\n        // prevent the form fields from emptying on submit.\n        e.preventDefault()\n\n        // determine if the password value matches the password confirm value.\n        if(passwordRef.current.value !== passwordConfirmRef.current.value){\n            return setError(\"Passwords do not match!\")\n        }\n\n\n        const promises = []\n        setLoading(true)\n        setError(\"\")\n        if (emailRef.current.value !== currentUser.email){\n            promises.push(updateEmail(emailRef.current.value))\n        }\n\n        if (passwordRef.current.value){\n            promises.push(updatePassword(passwordRef.current.value))\n        }\n\n        Promise.all(promises).then(() => {\n            history.push(\"/\")\n        }).catch(() => {\n            setError(\"Failed to update account\")\n        }).finally(() => {\n            setLoading(false)\n        })\n\n    }\n\n    return (\n        <>\n    <Card>\n        <Card.Body>\n            <h2 className=\"text-center mb-3\">Update Profile</h2>\n            {/* If there is an error with handleSubmit show it as a red alert */}\n            {error && <Alert variant=\"danger\">{error}</Alert>}\n            <Form onSubmit={handleSubmit}>\n                <Form.Group id=\"email\">\n                    <Form.Label>Email</Form.Label>\n                    <Form.Control type=\"email\" ref={emailRef} required defaultValue={currentUser.email} />\n                </Form.Group>\n\n                <Form.Group id=\"password\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control type=\"password\" ref={passwordRef} placeholder=\"Leave blank to leave the same password\" />\n                </Form.Group>\n\n                <Form.Group id=\"password-confirm\">\n                    <Form.Label>Confirm Password</Form.Label>\n                    <Form.Control type=\"password\" ref={passwordConfirmRef} placeholder=\"Leave blank to leave the same password\"  />\n                </Form.Group>\n                <Button disabled={loading} className=\"w-100\" type=\"submit\" variant=\"success\">Update!</Button>\n            </Form>\n        </Card.Body>\n    </Card>\n    <div className=\"w-100 text-center mt-2\">\n        <Link to=\"/dashboard\">Cancel</Link>\n    </div>\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}